<UserControl x:Class="EddiShipMonitor.ConfigurationWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:defs="clr-namespace:EddiDataDefinitions;assembly=EddiDataDefinitions"
             xmlns:local="clr-namespace:EddiShipMonitor"
             xmlns:resx="clr-namespace:EddiShipMonitor.Properties"
             xmlns:utility="clr-namespace:Utilities;assembly=Utilities"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <DataTemplate x:Key="shipDetailsTemplate" DataType="{x:Type defs:Ship}">
            <Grid Background="Azure">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Margin="25, 0, 0, 0">
                    <Run Text="{x:Static resx:ShipMonitor.header_ship_ID}"/>
                    <Run Text=":"/>
                </TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=ident}" Margin="10, 0, 10, 0"/>
                <TextBlock Grid.Column="2" Grid.Row="0" Margin="10, 0, 10, 0">
                    <Run Text="{x:Static resx:ShipMonitor.header_station_name}"/>
                    <Run Text=":"/>
                </TextBlock>
                <TextBlock Grid.Column="3" Grid.Row="0" Text="{Binding Path=StoredLocation.stationName}" Margin="10, 0, 10, 0"/>
                <TextBlock Grid.Column="4" Grid.Row="0" Margin="5, 0, 5, 0">
                    <Run Text="{x:Static resx:ShipMonitor.header_value}"/>
                    <Run Text=":"/>
                </TextBlock>
                <TextBlock Grid.Column="5" Grid.Row="0" Text="{Binding Path=value, StringFormat=\{0:N0\}}" Margin="5, 0, 0, 0"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <DockPanel LastChildFill="True" Background="#FFE5E5E5" Margin="0">
        <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin="5" Text="{x:Static resx:ShipMonitor.p1}" VerticalAlignment="Top"/>
        <RichTextBox DockPanel.Dock="Top" Margin="0"  IsReadOnly="True" IsDocumentEnabled="True" Background="#FFE5E5E5" BorderThickness="0">
            <FlowDocument Background="#FFE5E5E5">
                <Paragraph >
                    <Run Text="{x:Static resx:ShipMonitor.p2}" />
                    <Hyperlink Click="ipaClicked" >
                        <Run Text="{x:Static resx:ShipMonitor.link_ipa}" />
                    </Hyperlink>
                    <Run Text="{x:Static resx:ShipMonitor.p3}" />
                </Paragraph>
            </FlowDocument>
        </RichTextBox>
        <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin="5" Text="{x:Static resx:ShipMonitor.p4}" VerticalAlignment="Top"/>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock TextWrapping="Wrap" Text="{x:Static resx:ShipMonitor.p5}" Margin="5, 0, 0, 0" VerticalAlignment="Top"/>
            <ComboBox x:Name="exportComboBox" Grid.Column="1" Margin="5, 0, 0, 0" Background="#FFE5E5E5" SelectionChanged="onExportTargetChanged" SelectedValuePath="Content" IsEditable="False" IsReadOnly="True" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Right">
                <ComboBoxItem>Coriolis</ComboBoxItem>
                <ComboBoxItem>Coriolis (Beta)</ComboBoxItem>
                <ComboBoxItem>EDSY</ComboBoxItem>
            </ComboBox>
        </Grid >
        <DataGrid Margin="0,5" AutoGenerateColumns="False" x:Name="shipData" CanUserAddRows="false" CanUserDeleteRows="False" TargetUpdated="shipsUpdated" HeadersVisibility="Column">
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton Content="⯈" Click="RowDetailsButtonClick" ToolTip="{x:Static resx:ShipMonitor.extra_details_tooltip}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="{x:Static resx:ShipMonitor.header_name}" IsReadOnly="True" Binding="{Binding Path=name}"/>
                <DataGridTextColumn Header="{x:Static resx:ShipMonitor.header_model}" IsReadOnly="True" Binding="{Binding Path=model}"/>
                <DataGridTextColumn Header="{x:Static resx:ShipMonitor.header_location}" IsReadOnly="True" Binding="{Binding Path=StoredLocation.systemName}"/>
                <utility:DataGridNumericColumn Header="{x:Static resx:ShipMonitor.header_distanceLY}" IsReadOnly="True" Binding="{Binding Path=distance, StringFormat=\{0:N0\}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Right" />
                            <Setter Property="Margin" Value="5, 0" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </utility:DataGridNumericColumn>
                <DataGridTextColumn Header="{x:Static resx:ShipMonitor.header_hot}" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="Margin" Value="5, 0" />
                            <Setter Property="Foreground" Value="Black"></Setter>
                            <Setter Property="Text" Value="{x:Static resx:ShipMonitor.ship_clean}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding hot}" Value="True">
                                    <Setter Property="Foreground" Value="Crimson"></Setter>
                                    <Setter Property="Text" Value="{x:Static resx:ShipMonitor.ship_hot}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridComboBoxColumn Header="{x:Static resx:ShipMonitor.header_role}" SelectedItemBinding="{Binding Path=Role, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding Source={x:Static defs:Role.Sorted}}">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <EventSetter Event="SelectionChanged" Handler="shipsUpdated" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <DataGridTextColumn Header="{x:Static resx:ShipMonitor.header_spoken_name}" Width="*">
                    <DataGridTextColumn.Binding>
                        <Binding Path="phoneticName" NotifyOnTargetUpdated="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" TargetNullValue="{x:Static System:String.Empty}">
                            <Binding.ValidationRules>
                                <utility:ValidIPARule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="{x:Type TextBox}">
                            <EventSetter Event="TextChanged" Handler="PhoneticName_TextChanged" />
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTipService.ToolTip"
                                            Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Click="testShipName" Content="{x:Static resx:ShipMonitor.hear_it_button}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="defs:Ship">
                            <Button IsEnabled="{Binding RawIsNotNull, UpdateSourceTrigger=PropertyChanged}" Click="exportShip" Content="{x:Static resx:ShipMonitor.export_it_button}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate DataType="{x:Type defs:Ship}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="ContentTemplate"
                                        Value="{StaticResource shipDetailsTemplate}" />
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

        </DataGrid>
    </DockPanel>
</UserControl>
